stages:
  - build
  - publish
  - release

variables:
  NAME_ZIP: dist.zip
  PACKAGE_REGISTRY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic

build_windows:
  stage: build
  tags: [windows]
  script:
    - |
      mkdir build
      cd build
      cmake -G "MinGW Makefiles" ..
      mingw32-make
      mkdir dist
      cp *.exe dist
      zip -r $NAME_ZIP dist
      mv $NAME_ZIP ../.
  artifacts:
    expire_in: 10min
    paths:
      - $NAME_ZIP


publish_job:
  stage: publish
  image: curlimages/curl:latest
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "${NAME_ZIP}" "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/win-x86_64/${NAME_ZIP}"
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v[0-9]\.[0-9]\.[0-9](-rc.+)?/'
      when: always
  needs:
    - job: build_windows
      artifacts: true

# reference for release job: https://mike-ensor.medium.com/release-multi-target-rust-applications-with-gitlab-ci-90136fa10e4c
release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  variables:
    WIN_ASSET_LINK: "{\"name\":\"deploy-win-${CI_COMMIT_TAG}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/win-x86_64/${NAME_ZIP}\",\"type\":\"package\"}"
  script:
    - echo "Releasing..."
    - echo "Tag = ${CI_COMMIT_TAG}"
    - echo "URL = ${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}"
    #- echo "LINUX = ${LINUX_ASSET_LINK}"
    - echo "WIN = ${WIN_ASSET_LINK}"
    - |
      release-cli --debug create --name "Release ${CI_COMMIT_TAG}" --tag-name "${CI_COMMIT_TAG}"  --assets-link "${WIN_ASSET_LINK}"
    # --assets-link "${LINUX_ASSET_LINK}"
    - echo "Done!"
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v[0-9]\.[0-9]\.[0-9](-rc.+)?/'
      when: always
  needs:
    - job: publish_job